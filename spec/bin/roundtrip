#!/usr/bin/env ruby
# Script to dynamically create specs trying to correctly roundtrip all the .puz files that get
# passed in

if ARGV.size < 1
  puts 'Puzzle file(s) required!'
  puts 'Usage: roundtrip </path/to/puzfile.puz>...'
  puts 'exiting...'
end

require File.expand_path('../../spec_helper', __FILE__)

# Mild Abuse of the RSpec API, but it works pretty well.
describe '.puz' do
  ARGV.each do |f|
    if File.exists?(f)
      if RoundTripper::ROUNDTRIP_INVALIDS.include?(f)
        xit "is a known invalid #{f}"
      else
        if File.size(f) > 0
          it("roundtrips #{f}") { expect(f).to roundtrip_successfully }
        else
          xit "is empty #{f}"
        end
      end
    else
      xit "does not exist #{f}"
    end
  end
end

# Force lack of fail_fast in case it is set in ~/.rspec
# There's no --no-fail-fast option to do this the easy way
options = RSpec::Core::ConfigurationOptions.new([])
options.options[:fail_fast] = false
RSpec::Core::Runner.new(options).run($stderr, $stdout)

